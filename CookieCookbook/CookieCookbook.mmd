classDiagram
    direction TB

    class Ingredient {
        +int Id
        +string Name
        +string PreparationInstruction
    }
    
    class Recipe {
        +List~Ingredient~ Ingredients
        +bool IsValid()
    }
    
    Recipe "1" *-- "0..*" Ingredient : contains

    class IRecipeRepository {
        <<interface>>
        +List~Recipe~ LoadRecipes(string path)
        +void SaveRecipes(string path, List~Recipe~ recipes)
    }
    
    class JsonRecipeRepository {
        +List~Recipe~ LoadRecipes(string path)
        +void SaveRecipes(string path, List~Recipe~ recipes)
    }
    
    class TxtRecipeRepository {
        +List~Recipe~ LoadRecipes(string path)
        +void SaveRecipes(string path, List~Recipe~ recipes)
    }

    IRecipeRepository <|.. JsonRecipeRepository : implements
    IRecipeRepository <|.. TxtRecipeRepository : implements

    class IIngredientRepository {
        <<interface>>
        +List~Ingredient~ GetAllAvailable()
        +Ingredient GetById(int id)
    }
    
    class IngredientRepository {
        -Dictionary~int, Ingredient~ ingredients
        +List~Ingredient~ GetAllAvailable()
        +Ingredient GetById(int id)
    }

    IIngredientRepository <|.. IngredientRepository : implements

    class IUserInterface {
        <<interface>>
        +void DisplayExistingRecipes(List~Recipe~ recipes)
        +void DisplayAvailableIngredients(List~Ingredient~ ingredients)
        +string PromptForIngredientId()
        +void DisplayRecipeSaved(Recipe recipe)
        +void DisplayMessage(string message)
        +void WaitForExit()
    }
    
    class ConsoleUserInterface {
        +void DisplayExistingRecipes(List~Recipe~ recipes)
        +void DisplayAvailableIngredients(List~Ingredient~ ingredients)
        +string PromptForIngredientId()
        +void DisplayRecipeSaved(Recipe recipe)
        +void DisplayMessage(string message)
        +void WaitForExit()
    }

    IUserInterface <|.. ConsoleUserInterface : implements

    class IRecipeService {
        <<interface>>
        +List~Recipe~ GetExistingRecipes()
        +List~Ingredient~ GetAvailableIngredients()
        +Ingredient? GetIngredientById(int id)
        +bool SaveRecipe(Recipe recipe)
    }

    class RecipeService {
        -IRecipeRepository recipeRepo
        -IIngredientRepository ingredientRepo
        -string filePath
        +RecipeService( IRecipeRepository recipeRepo, IIngredientRepository ingredientRepo, string filePath)
        +List~Recipe~ GetExistingRecipes()
        +List~Ingredient~ GetAvailableIngredients()
        +Ingredient? GetIngredientById(int id)
        +bool SaveRecipe(Recipe recipe)
    }

    IRecipeService <|.. RecipeService : implements

    RecipeService --> IRecipeRepository : uses
    RecipeService --> IIngredientRepository : uses
    RecipeService --> Recipe : creates
    
    class CookieRecipeController {
        -IRecipeService recipeService
        -IUserInterface userInterface
        +CookieRecipeController(IRecipeService recipeService, IUserInterface userInterface)
        +void Run()
    }
    
    class FileFormat {
        <<enumeration>>
        TXT
        JSON
    }

    CookieRecipeController ..> RecipeService : composes
    CookieRecipeController ..> FileFormat : uses
    CookieRecipeController ..> IRecipeService : uses
    CookieRecipeController ..> IUserInterface : uses